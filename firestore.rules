rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth.uid != null;
    }
    function isAdmin() {
      return request.auth.uid == 'admin';
    }
    function isSentFromCorrectId() {
      return request.auth.uid == request.resource.data.sentFromAccountId;
    }
    function isCreatedTimeCorrect() {
      return request.time == request.resource.data.createdAt;
    }
    function isUpdatedTimeCorrect() {
      return request.time == request.resource.data.updatedAt;
    }
    function isOwnAccount(uid) {
      return request.auth.uid == uid;
    }
    function isUserInRoom(room, uid) {
      return uid in room.memberIds;
    }
    function isUserInRoomByFetch(roomId) {
      return request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.memberIds
    }

    match /{path=**}/alreadyReadMessages/{uid} {
      allow list: if isAuthenticated() && isUserInRoomByFetch(resource.data.roomId);
      allow create, update: if isAuthenticated()
                    && isUserInRoomByFetch(request.resource.data.roomId)
                    && isOwnAccount(uid)
                    && isUpdatedTimeCorrect();
    }

    match /rooms/{roomId} {
      allow list: if isAuthenticated()
                  && (isUserInRoom(resource.data, request.auth.uid) || isAdmin());

      match /messages/{messageId} {
        allow read: if isAuthenticated()
                    && (isUserInRoomByFetch(roomId) || isAdmin());
        allow create: if isAuthenticated()
                      && isUserInRoomByFetch(roomId)
                      && isSentFromCorrectId()
                      && isCreatedTimeCorrect();
      }
    }

    match /accounts/{uid}/rooms/{roomId}/unreadMessageSegments/{unreadMessageSegmentId} {
      allow read, write: if isAuthenticated()
                          && isUserInRoomByFetch(roomId)
                          && isOwnAccount(uid);
    }
  }
}
